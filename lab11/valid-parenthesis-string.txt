class Solution {
public:
    bool checkValidString(string s) {
        queue<pair<int, int>> q; 
        unordered_set<string> visited; 
        q.push({0, 0});

        while (!q.empty()) {
            auto [index, balance] = q.front();
            q.pop();

            if (balance < 0) continue; 
            if (index == s.size()) {
                if (balance == 0) return true;
                continue;
            }

            string state = to_string(index) + "," + to_string(balance);
            if (visited.count(state)) continue;
            visited.insert(state);

            if (s[index] == '(') {
                q.push({index + 1, balance + 1});
            } else if (s[index] == ')') {
                q.push({index + 1, balance - 1});
            } else { 
                q.push({index + 1, balance + 1}); 
                q.push({index + 1, balance - 1}); 
                q.push({index + 1, balance});     
            }
        }

        return false;
    }
};
