class MyQueue {
private:
    stack<int> queue1;
    stack<int> queue2;
public:
    MyQueue() {
    }
    
    void push(int x) {
        queue1.push(x);
    }
    
    int pop() {
        if (queue2.empty()) {
            while (!queue1.empty()) {
                queue2.push(queue1.top());
                queue1.pop();
            }
        }
        int front = queue2.top();
        queue2.pop();
        return front;
    }
    
    int peek() {
        if (queue2.empty()) {
            while (!queue1.empty()) {
                queue2.push(queue1.top());
                queue1.pop();
            }
        }
        return queue2.top();
    }
    
    bool empty() {
        return queue1.empty() && queue2.empty();
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */